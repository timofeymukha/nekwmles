c     USER SETTING: max local number of boundary points for which
c     WMLES is applied. A check for it being large enough will be
c     applied.
      integer NMAX_BOUNDARY_POINTS
      parameter(NMAX_BOUNDARY_POINTS=4000)


c     module id and name
      integer wmles_id
      character*(*) wmles_name
      parameter(wmles_name='WMLES')

c     initialisation flag
      logical wmles_ifinit

c     Runtime parameter part
c     section id
      integer wmles_sec_id  
c     kappa in the log law
      integer wmles_logkappa_id
c     B in the log law
      integer wmles_logb_id
c     z0 in the rough log law and z1 for temperature
      integer wmles_z0_id, wmles_z1_id
c     inital guess for the wall-shear stress
      integer wmles_guess_id
c     the boundary id identifying walls on which modelling is applied 
      integer wmles_bid_id
c     wether to use wall viscosity or a traction boundary
      integer wmles_ifviscosity_id
c     number of iterations defining the time-scale for averaging
      integer wmles_navrg_id
c     constant surface temperature
      integer wmles_surface_temp_id
c     whether h is index or distance
      integer wmles_h_is_index_id
      
c     Timers
c     total
      integer wmles_tmr_tot_id
c     sampling
      integer wmles_tmr_sampling_id
      
      
c     wall shear stress       
      real wmles_tau(NMAX_BOUNDARY_POINTS, 3)
c     wall heat flux      
      real wmles_q(NMAX_BOUNDARY_POINTS)

c     sampled solution
      real wmles_solh(NMAX_BOUNDARY_POINTS, 5)
c     sampling height
      real wmles_sampling_h(NMAX_BOUNDARY_POINTS)
c     sampling points
      real wmles_sampling_points(NMAX_BOUNDARY_POINTS, 3)
c     normals to the wall
      real wmles_normals(NMAX_BOUNDARY_POINTS, 3)
c     areas of the wall
      real wmles_areas(NMAX_BOUNDARY_POINTS)

c     holds the ix iy iz ie for the linear index into the wmles arrays
      integer wmles_indices(NMAX_BOUNDARY_POINTS, 4)
c     holds the linear inedx into the wmles arrays for each ix iy iz ie
      integer wmles_inv_indices(lx1, ly1, lz1, lelv)

c     number of iterations defining the time-scale for averaging
      real wmles_navrg
c     surface temperature
      real wmles_surface_temp

c     The boundary id for the walls
      integer wmles_wallbid
c     Whether to use viscosity at the wall to enforce tau
      logical wmles_ifviscosity
c     Whether h is an integer index or a distance
      logical wmles_ifhisindex
c     Actual number of gll nodes for boundary wallbid
      integer wmles_nbpoints
c     Handle for interpolation
      integer wmles_interpolation_handle
c     Flag for searching points for interpolation
      logical wmles_iffind

c     Common blocks split by variable type
      common /wmlesi/ wmles_sec_id, wmles_logkappa_id, wmles_logb_id,
     $                wmles_z0_id, wmles_z1_id, wmles_guess_id,
     $                wmles_bid_id, wmles_ifviscosity_id,
     $                wmles_navrg_id, wmles_surface_temp_id,
     $                wmles_tmr_tot_id, wmles_tmr_sampling_id,
     $                wmles_h_is_index_id, wmles_wallbid,
     $                wmles_nbpoints,
     $                wmles_interpolation_handle, wmles_indices

      common /wmlesl/ wmles_ifinit, wmles_ifviscosity, wmles_ifhisindex,
     $                wmles_iffind

      common /wmlesr/ wmles_navrg, wmles_surface_temp,
     $ wmles_sampling_h, wmles_sampling_points,
     $ wmles_solh, wmles_normals, wmles_tau, wmles_q, wmles_areas
